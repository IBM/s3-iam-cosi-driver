# Example of granting read/write access to bucket
apiVersion: objectstorage.k8s.io/v1alpha1
kind: BucketAccessClass
metadata:
  name: account1-read-write-access
driverName: s3-iam.objectstorage.k8s.io
authenticationType: KEY
parameters:
  # Define common allowed actions once with an anchor
  commonActions:
    - "s3:GetObject"
    - "s3:ListBucket"
    - "s3:PutObject"

  # Users are granted read & write access to buckets (by default or by request)
  defaultPolicy:
    allow:
      actions:
        *commonActions
  requestPolicy:
    allow:
      actions:
        *commonActions

  # All other actions are denied by default
---
# By default, this request is granted read & write access to buckets.
kind: BucketAccess
apiVersion: objectstorage.k8s.io/v1alpha1
metadata:
  name: my-bucket1-access
spec:
  bucketClaimName: my-bucket1
  bucketAccessClassName: account1-read-write-access
  credentialsSecretName: my-bucket1-credentials
  protocol: s3
---
# This request will get denied because it requests delete action.
kind: BucketAccess
apiVersion: objectstorage.k8s.io/v1alpha1
metadata:
  name: my-bucket1-access
  namespace: default
spec:
  bucketClaimName: my-bucket1
  bucketAccessClassName: account1-read-write-access
  credentialsSecretName: my-bucket1-credentials
  protocol: s3
  accessRequest:
    actions:
      - "s3:GetObject"
      - "s3:ListBucket"
      - "s3:PutObject"
      - "s3:DeleteObject"   # <-- this is one is not allowed
